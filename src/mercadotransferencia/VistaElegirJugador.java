package mercadotransferencia;

import Futbolistas.ModeloFutbolista;
import java.awt.Image;
import java.awt.Toolkit;
import static java.lang.String.valueOf;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 12Matienzo
 */
public class VistaElegirJugador extends javax.swing.JFrame {
        private Futbolistas.Conectar conectar;
        private ModeloFutbolista modelo;
        private Connection con;
    /**
     * Creates new form Vistaelegirjugador
     */
    public VistaElegirJugador() {
        initComponents();
        setIconImage(getIconImage());
        setLocationRelativeTo(null);
                conectar = new Futbolistas.Conectar();



        ModeloFutbolista datos;
        ResultSet rs;
        PreparedStatement ps;
        ArrayList<ModeloFutbolista> lista = new ArrayList<>();
        String sql = "select persona.nombre_persona,persona.apellido_persona,futbolista.apodo_futbolista,futbolista.posición_futbolista,futbolista.altura_futbolista,futbolista.piernahabil_futbolista,futbolista.sueldo_futbolista,futbolista.inicio_contrato,futbolista.fin_contrato FROM futbolista INNER JOIN persona ON futbolista.id_persona=persona.id_persona";
        
        try{
            con = conectar.getConexion();
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            while(rs.next()){
                datos = new ModeloFutbolista();
                datos.setNombre(rs.getString("persona.nombre_persona")); 
                datos.setApellido(rs.getString("persona.apellido_persona")); 
                datos.setApodo(rs.getString("futbolista.apodo_futbolista")); 
                datos.setPosicion(rs.getString("futbolista.posición_futbolista")); 
                datos.setAltura(rs.getInt("futbolista.altura_futbolista")); 
                datos.setPiernahabil_futbolista(rs.getString("futbolista.piernahabil_futbolista")); 
                datos.setSueldo(rs.getFloat("futbolista.sueldo_futbolista")); 
                datos.setInicio_contrato(rs.getDate("futbolista.inicio_contrato").toString()); 
                datos.setFin_contrato(rs.getDate("futbolista.fin_contrato").toString()); 
                lista.add(datos);             
            }            
            rs.close();
            ps.close();
            con.close();
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, "Error de conexión: " + e.getMessage());
        }
        
        DefaultTableModel tabla =  new DefaultTableModel();
        String[] fila = new String[45];
        tabla.addColumn("Nombre");
        tabla.addColumn("Apellido");
        tabla.addColumn("Apodo");
        tabla.addColumn("Posicion");
        tabla.addColumn("Altura");
        tabla.addColumn("Pierna Habil");
        tabla.addColumn("Sueldo");
        tabla.addColumn("Inicio de Contrato");
        tabla.addColumn("Fin de Contrato");
        
        for(int f=0; f<lista.size();f++){
            fila[0] = lista.get(f).getNombre();
            fila[1] = lista.get(f).getApellido();
            fila[2] = lista.get(f).getApodo();
            fila[3] = lista.get(f).getPosicion();
            fila[4] = valueOf(lista.get(f).getAltura());
            fila[5] = lista.get(f).getPiernahabil_futbolista();
            fila[6] = valueOf(lista.get(f).getSueldo());
            fila[7] = lista.get(f).getInicio_contrato();
            fila[8] = lista.get(f).getFin_contrato();
            tabla.addRow(fila);
        }
        tabla_jugadores.setModel(tabla);
        
    }
    
    //Se establece el icono de la vista
    @Override
    public Image getIconImage(){
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Imagenicono/Mitre_escudo.png"));
        return retValue;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        boton_cancelar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_jugadores = new javax.swing.JTable();
        boton_mov = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Club Atlético Mitre (Santiago del Estero)");

        boton_cancelar.setText("Cancelar");
        boton_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_cancelarActionPerformed(evt);
            }
        });

        tabla_jugadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabla_jugadores);

        boton_mov.setText("Hacer movimiento");
        boton_mov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_movActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(boton_mov, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 301, Short.MAX_VALUE)
                        .addComponent(boton_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boton_mov)
                    .addComponent(boton_cancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void boton_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_cancelarActionPerformed
        VistaMercadotransferencia volver = new VistaMercadotransferencia();
        volver.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_boton_cancelarActionPerformed

    private void boton_movActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_movActionPerformed

        PreparedStatement ps;

        int fila = tabla_jugadores.getSelectedRow();
        String nombre = tabla_jugadores.getModel().getValueAt(fila,0).toString();
        String apellido = tabla_jugadores.getModel().getValueAt(fila,1).toString();

        String sql = "insert into involucrado(id_futbolista,id_movimiento) SELECT persona.id_persona,(SELECT MAX(id_movimiento) FROM movimientos) from persona where persona.nombre_persona=? and persona.apellido_persona=?";

        try{
            con = conectar.getConexion();
            ps = con.prepareStatement(sql);
            ps.setString(1,nombre);
            ps.setString(2,apellido);
            ps.executeUpdate();
            ps.close();
            con.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, "Error de conexión: " + e.getMessage());
        }
        
                VistaMercadotransferencia volver = new VistaMercadotransferencia();
        volver.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_boton_movActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaElegirJugador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaElegirJugador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaElegirJugador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaElegirJugador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaElegirJugador().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boton_cancelar;
    private javax.swing.JButton boton_mov;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla_jugadores;
    // End of variables declaration//GEN-END:variables
}
